name: CI/CD NODOSTUDIO

# Triggers múltiples para cubrir todos los escenarios
on: 
  # Mantener el comportamiento original: CI en push a feature branches
  push:
    branches:
      - 'feature/**'
  
  # Nuevo comportamiento: CI en Pull Requests
  pull_request:
    branches:
      - develop
      - main

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  # Job para push a feature branches (comportamiento original mejorado)
  test-feature:
    name: Test Feature Branch
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install

      - name: Run linters for code quality
        id: lint
        run: |
          npm run lint
          npm run lint:scss

      - name: Run unit tests
        id: test
        run: npm run test

      - name: Verify project can be built
        id: build
        run: npm run build

  # Job para Pull Requests (nuevo comportamiento)
  validate-pr:
    name: Validate Pull Request
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
      issues: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install

      - name: Run linters for code quality
        id: lint
        run: |
          npm run lint
          npm run lint:scss

      - name: Run unit tests
        id: test
        run: npm run test

      - name: Verify project can be built
        id: build
        run: npm run build

      - name: Comment PR with build status
        if: always() && github.event.pull_request.head.repo.full_name == github.repository
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const lint = '${{ steps.lint.outcome }}' === 'success' ? '✅ PASS' : '❌ ERROR';
            const test = '${{ steps.test.outcome }}' === 'success' ? '✅ PASS' : '❌ ERROR';
            const build = '${{ steps.build.outcome }}' === 'success' ? '✅ PASS' : '❌ ERROR';

            const status = '${{ job.status }}' === 'success'
              ? '✅ OK All checks passed!'
              : '❌ FAIL Some checks failed!';

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `**CI/CD Status**: ${status}\n\n- Linting: ${lint}\n- Tests: ${test}\n- Build: ${build}`
            });

